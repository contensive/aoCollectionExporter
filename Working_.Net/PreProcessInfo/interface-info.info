[segment [list* "aoCExport.kmaCommonModule" [segment [&interface-sub-decl [segment] [&array [&byte]] "kmaStringToByteArray" (&arg-list [&arg [&string] "strInput"] [&arg (&optional) [&boolean] "bReturnAsUnicode" #t] [&arg (&optional) [&boolean] "bAddNullTerminator" #f]) #f] [&interface-sub-decl [segment] [&string] "kmaByteArrayToString" (&arg-list [&arg [&array [&byte]] "Bytes"]) #f] [&interface-sub-decl [segment] [&string] "GetTagInnerHTML" (&arg-list [&arg [&string] "PageSource"] [&arg [&string] "Tag"] [&arg [&boolean] "ReturnAll"]) #f] [&interface-sub-decl [segment] [&long] "kmaGetListIndex" (&arg-list [&arg [&string] "Item"] [&arg [&string] "ListOfItems"]) #f] [&interface-sub-decl [segment] [&string] "kmaIndent" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "kmaEncodeJavascript" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "kmaGetSingular" (&arg-list [&arg [&string] "PluralSource"]) #f] [&interface-sub-decl [segment] [&string] "kmaRemoveStyleTags" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "kmaRemoveTag" (&arg-list [&arg [&string] "Source"] [&arg [&string] "TagName"]) #f] [&interface-sub-decl [segment] [&string] "kmaEncodeInitialCaps" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "kmaErrorMsg" (&arg-list [&arg [&long] "ErrorNumber"]) #f] [&interface-sub-decl [segment] [&void] "AppendLog" (&arg-list [&arg [&string] "Filename"] [&arg [&string] "Text"]) #f] [&interface-sub-decl [segment] [&void] "AppendLogFile" (&arg-list [&arg [&variant] "Text"]) #f] [&interface-sub-decl [segment] [&void] "HandleErrorAndResumeNext" (&arg-list [&arg [&string] "ClassName"] [&arg [&string] "MethodName"] [&arg (&optional) [&string] "Description"] [&arg (&optional) [&long] "ErrorNumber"]) #f] [&interface-sub-decl [segment] [&string] "HandleError" (&arg-list [&arg [&string] "ClassName"] [&arg [&string] "MethodName"] [&arg [&long] "ErrNumber"] [&arg [&string] "ErrSource"] [&arg [&string] "ErrDescription"] [&arg [&boolean] "ErrorTrap"] [&arg [&boolean] "ResumeNext"] [&arg (&optional) [&string] "URL"]) #f] [&interface-sub-decl [segment] [&string] "kmaGetLinkedText" (&arg-list [&arg [&variant] "AnchorTag"] [&arg [&variant] "AnchorText"]) #f] [&interface-sub-decl [segment] [&string] "GetDbObjectTableName" (&arg-list [&arg [&string] "DbObject"]) #f] [&interface-sub-decl [segment] [&string] "kmaEncodeAppRootPath" (&arg-list [&arg [&string] "Link"] [&arg [&string] "VirtualPath"] [&arg [&string] "AppRootPath"] [&arg [&string] "ServerHost"]) #f] [&interface-sub-decl [segment] [&string] "kmaConvertLinkToShortLink" (&arg-list [&arg [&string] "URL"] [&arg [&string] "ServerHost"] [&arg [&string] "ServerVirtualPath"]) #f] [&interface-sub-decl [segment] [&string] "kmaConvertShortLinkToLink" (&arg-list [&arg [&string] "URL"] [&arg [&string] "PathPagePrefix"]) #f] [&interface-sub-decl [segment] [&string] "kmaGetTableRow" (&arg-list [&arg [&string] "Cell"] [&arg (&optional) [&long] "ColSpan"] [&arg (&optional) [&boolean] "EvenRow"]) #f] [&interface-sub-decl [segment] [&string] "kmaGetTableCell" (&arg-list [&arg [&string] "Copy"] [&arg (&optional) [&string] "Width"] [&arg (&optional) [&long] "ColSpan"] [&arg (&optional) [&boolean] "EvenRow"] [&arg (&optional) [&string] "Align"] [&arg (&optional) [&string] "BGColor"]) #f] [&interface-sub-decl [segment] [&string] "kmaStartTableCell" (&arg-list [&arg (&optional) [&string] "Width"] [&arg (&optional) [&long] "ColSpan"] [&arg (&optional) [&boolean] "EvenRow"] [&arg (&optional) [&string] "Align"] [&arg (&optional) [&string] "BGColor"]) #f] [&interface-sub-decl [segment] [&string] "kmaStartTableRow" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "kmaStartTable" (&arg-list [&arg [&long] "Padding"] [&arg [&long] "Spacing"] [&arg [&long] "Border"] [&arg (&optional) [&string] "ClassStyle"]) #f] [&interface-sub-decl [segment] [&string] "kmaGetFilename" (&arg-list [&arg [&string] "PathFilename"]) #f] [&interface-sub-decl [segment] [&string] "kmaGetYesNo" (&arg-list [&arg [&boolean] "Key"]) #f] [&interface-sub-decl [segment] [&array [&string] -1] "kmaSplit_Old" (&arg-list [&arg [&string] "WordList"] [&arg [&string] "Delimiter"]) #f] [&interface-sub-decl [segment] [&array [&string] -1] "kmaSplit" (&arg-list [&arg [&string] "WordList"] [&arg [&string] "Delimiter"]) #f] [&interface-sub-decl [segment] [&long] "kmaGetFirstNonZeroLong" (&arg-list [&arg [&long] "Integer1"] [&arg [&long] "Integer2"]) #f] [&interface-sub-decl [segment] [&date] "kmaGetFirstNonZeroDate" (&arg-list [&arg [&date] "Date0"] [&arg [&date] "Date1"]) #f] [&interface-sub-decl [segment] [&string] "kmaDecodeURL" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "kmaDecodeResponseVariable" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "kmaAddSpan" (&arg-list [&arg [&string] "Copy"] [&arg [&string] "ClassName"]) #f] [&interface-sub-decl [segment] [&string] "kmaDecodeHTML" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "kmaEncodeHTML" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "kmaEncodeRequestVariable" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "kmaEncodeQueryString" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "kmaEncodeURL" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&boolean] "IsInDelimitedString" (&arg-list [&arg [&string] "DelimitedString"] [&arg [&string] "TestString"] [&arg [&string] "Delimiter"]) #f] [&interface-sub-decl [segment] [&long] "GetProcessID" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "GetErrString" (&arg-list [&arg (&optional) [&type-dot [&id "VBA"] [&id "ErrObject"]] "ErrorObject"]) #f] [&interface-sub-decl [segment] [&void] "SetProcessHighPriority" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "GetIntegerString" (&arg-list [&arg [&long] "Value"] [&arg [&long] "DigitCount"]) #f] [&interface-sub-decl [segment] [&string] "kmaModifyLinkQuery" (&arg-list [&arg [&string] "Link"] [&arg [&string] "QueryName"] [&arg [&string] "QueryValue"] [&arg (&optional) [&variant] "AddIfMissing"]) #f] [&interface-sub-decl [segment] [&string] "ModifyQueryString" (&arg-list [&arg [&string] "WorkingQuery"] [&arg [&string] "QueryName"] [&arg [&string] "QueryValue"] [&arg (&optional) [&variant] "AddIfMissing"]) #f] [&interface-sub-decl [segment] [&void] "CloseRS" (&arg-list [&arg [&variant] "RS"]) #f] [&interface-sub-decl [segment] [&boolean] "IsRSOK" (&arg-list [&arg [&variant] "RS"]) #f] [&interface-sub-decl [segment] [&long] "GetRandomInteger" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "KmaGetLine" (&arg-list [&arg [&string] "Body"]) #f] [&interface-sub-decl [segment] [&string] "KmaEncodeSQLBoolean" (&arg-list [&arg [&variant] "ExpressionVariant"]) #f] [&interface-sub-decl [segment] [&string] "KmaEncodeSQLNumber" (&arg-list [&arg [&variant] "ExpressionVariant"]) #f] [&interface-sub-decl [segment] [&string] "KmaEncodeSQLDate" (&arg-list [&arg [&variant] "ExpressionVariant"]) #f] [&interface-sub-decl [segment] [&string] "KmaEncodeSQLLongText" (&arg-list [&arg [&variant] "ExpressionVariant"]) #f] [&interface-sub-decl [segment] [&string] "KmaEncodeSQLText" (&arg-list [&arg [&variant] "ExpressionVariant"]) #f] [&interface-sub-decl [segment] [&string] "kmaGetNameValue_old" (&arg-list [&arg [&string] "Name"] [&arg [&string] "ArgumentString"] [&arg (&optional) [&string] "DefaultValue"]) #f] [&interface-sub-decl [segment] [&string] "GetAggrOption_old" (&arg-list [&arg [&string] "Name"] [&arg [&string] "SegmentCMDArgs"]) #f] [&interface-sub-decl [segment] [&string] "getSimpleNameValue" (&arg-list [&arg [&string] "Name"] [&arg [&string] "ArgumentString"] [&arg [&string] "DefaultValue"] [&arg [&string] "Delimiter"]) #f] [&interface-sub-decl [segment] [&string] "EncodeGMTDate" (&arg-list [&arg [&date] "MSDate"]) #f] [&interface-sub-decl [segment] [&date] "DecodeGMTDate" (&arg-list [&arg [&string] "GMTDate"]) #f] [&interface-sub-decl [segment] [&void] "ParseURL" (&arg-list [&arg (&byval) [&string] "SourceURL"] [&arg [&string] "Protocol"] [&arg [&string] "Host"] [&arg [&string] "Port"] [&arg [&string] "Path"] [&arg [&string] "Page"] [&arg [&string] "QueryString"]) #f] [&interface-sub-decl [segment] [&void] "SeparateURL" (&arg-list [&arg (&byval) [&string] "SourceURL"] [&arg [&string] "Protocol"] [&arg [&string] "Host"] [&arg [&string] "Path"] [&arg [&string] "Page"] [&arg [&string] "QueryString"]) #f] [&interface-sub-decl [segment] [&boolean] "KmaEncodeMissingBoolean" (&arg-list [&arg [&variant] "ExpressionVariant"] [&arg [&boolean] "DefaultState"]) #f] [&interface-sub-decl [segment] [&double] "KmaEncodeMissingNumber" (&arg-list [&arg [&variant] "ExpressionVariant"] [&arg [&double] "DefaultNumber"]) #f] [&interface-sub-decl [segment] [&date] "KmaEncodeMissingDate" (&arg-list [&arg [&variant] "ExpressionVariant"] [&arg [&date] "DefaultDate"]) #f] [&interface-sub-decl [segment] [&long] "KmaEncodeMissingInteger" (&arg-list [&arg [&variant] "ExpressionVariant"] [&arg [&long] "DefaultInteger"]) #f] [&interface-sub-decl [segment] [&string] "KmaEncodeMissingText" (&arg-list [&arg [&variant] "ExpressionVariant"] [&arg [&string] "DefaultText"]) #f] [&interface-sub-decl [segment] [&variant] "KmaEncodeMissing" (&arg-list [&arg [&variant] "ExpressionVariant"] [&arg [&variant] "DefaultVariant"]) #f] [&interface-sub-decl [segment] [&string] "kmaEncodeText" (&arg-list [&arg [&variant] "ExpressionVariant"]) #f] [&interface-sub-decl [segment] [&long] "KmaEncodeBit" (&arg-list [&arg [&variant] "ExpressionVariant"]) #f] [&interface-sub-decl [segment] [&boolean] "kmaEncodeBoolean" (&arg-list [&arg [&variant] "ExpressionVariant"]) #f] [&interface-sub-decl [segment] [&date] "KmaEncodeDate" (&arg-list [&arg [&variant] "ExpressionVariant"]) #f] [&interface-sub-decl [segment] [&double] "KmaEncodeNumber" (&arg-list [&arg [&variant] "ExpressionVariant"]) #f] [&interface-sub-decl [segment] [&long] "kmaEncodeInteger" (&arg-list [&arg [&variant] "ExpressionVariant"]) #f] [&interface-sub-decl [segment] [&long] "UrlUnescape" (&arg-list [&arg (&byval) [&string] "pszURL"] [&arg (&byval) [&string] "pszUnescaped"] [&arg [&long] "pcchUnescaped"] [&arg (&byval) [&long] "dwFlags"]) #f] [&interface-sub-decl [segment] [&long] "UrlEscape" (&arg-list [&arg (&byval) [&string] "pszURL"] [&arg (&byval) [&string] "pszEscaped"] [&arg [&long] "pcchEscaped"] [&arg (&byval) [&long] "dwFlags"]) #f] [&interface-sub-decl [segment] [&void] "Sleep" (&arg-list [&arg (&byval) [&long] "dwMilliseconds"]) #f] [&interface-sub-decl [segment] [&long] "GetCurrentProcessId" (&arg-list) #f] [&interface-sub-decl [segment] [&long] "GetTickCount" (&arg-list) #f]]] [list* "aoCExport.ccCommonModule" [segment [&interface-sub-decl [segment] [&string] "RegGetValue" (&arg-list [&arg [&long] "MainKey"] [&arg [&string] "SubKey"] [&arg [&string] "Value"]) #f] [&interface-sub-decl [segment] [&string] "GetIconSprite" (&arg-list [&arg [&string] "TagID"] [&arg [&long] "SpriteColumn"] [&arg [&string] "IconSrc"] [&arg [&long] "IconWidth"] [&arg [&long] "IconHeight"] [&arg [&string] "IconAlt"] [&arg [&string] "IconTitle"] [&arg [&string] "onDblClick"] [&arg [&boolean] "IconIsInline"] [&arg [&string] "ACInstanceID"]) #f] [&interface-sub-decl [segment] [&void] "HandleError2" (&arg-list [&arg [&string] "ContensiveAppName"] [&arg [&string] "Context"] [&arg [&string] "ProgramName"] [&arg [&string] "ClassName"] [&arg [&string] "MethodName"] [&arg [&long] "ErrNumber"] [&arg [&string] "ErrSource"] [&arg [&string] "ErrDescription"] [&arg [&boolean] "ErrorTrap"] [&arg [&boolean] "ResumeNext"] [&arg [&string] "URL"]) #f] [&interface-sub-decl [segment] [&void] "AppendLogFile2" (&arg-list [&arg [&string] "ContensiveAppName"] [&arg [&string] "Context"] [&arg [&string] "ProgramName"] [&arg [&string] "ClassName"] [&arg [&string] "MethodName"] [&arg [&long] "ErrNumber"] [&arg [&string] "ErrSource"] [&arg [&string] "ErrDescription"] [&arg [&boolean] "ErrorTrap"] [&arg [&boolean] "ResumeNextAfterLogging"] [&arg [&string] "URL"] [&arg [&string] "LogFolder"] [&arg [&string] "LogNamePrefix"]) #f] [&interface-sub-decl [segment] [&string] "ConvertRSTypeToGoogleType" (&arg-list [&arg [&long] "RecordFieldType"]) #f] [&interface-sub-decl [segment] [&string] "GetAddonIconImg" (&arg-list [&arg [&string] "AdminURL"] [&arg [&long] "IconWidth"] [&arg [&long] "IconHeight"] [&arg [&long] "IconSprites"] [&arg [&boolean] "IconIsInline"] [&arg [&string] "IconImgID"] [&arg [&string] "IconFilename"] [&arg [&string] "serverFilePath"] [&arg [&string] "IconAlt"] [&arg [&string] "IconTitle"] [&arg [&string] "ACInstanceID"] [&arg [&long] "IconSpriteColumn"]) #f] [&interface-sub-decl [segment] [&string] "ConvertLinkToRootRelative" (&arg-list [&arg [&string] "Link"] [&arg [&string] "BasePath"]) #f] [&interface-sub-decl [segment] [&boolean] "IsLinkToThisHost" (&arg-list [&arg [&string] "Host"] [&arg [&string] "Link"]) #f] [&interface-sub-decl [segment] [&string] "decodeNvaArgument" (&arg-list [&arg [&string] "EncodedArg"]) #f] [&interface-sub-decl [segment] [&string] "encodeNvaArgument" (&arg-list [&arg [&string] "Arg"]) #f] [&interface-sub-decl [segment] [&string] "DecodeAddonConstructorArgument" (&arg-list [&arg [&string] "EncodedArg"]) #f] [&interface-sub-decl [segment] [&string] "EncodeAddonConstructorArgument" (&arg-list [&arg [&string] "Arg"]) #f] [&interface-sub-decl [segment] [&void] "kmaShell" (&arg-list [&arg [&string] "Cmd"] [&arg (&optional) (&byval) [&type-dot [&id "VBA"] [&id "VbAppWinStyle"]] "eWindowStyle" [&id "vbHide"]] [&arg (&optional) [&boolean] "WaitForReturn"]) #f] [&interface-sub-decl [segment] [&array [&string]] "SplitCRLF" (&arg-list [&arg [&string] "Expression"]) #f] [&interface-sub-decl [segment] [&string] "GetHTMLComment" (&arg-list [&arg [&string] "Comment"]) #f] [&interface-sub-decl [segment] [&string] "GetAddonRootPath" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "GetProgramPath" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "ConvertLinksToAbsolute" (&arg-list [&arg [&string] "Source"] [&arg [&string] "RootLink"]) #f] [&interface-sub-decl [segment] [&string] "ccGetTabs" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "OldccGetTabs" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "ccAddTabEntry" (&arg-list [&arg [&string] "Caption"] [&arg [&string] "Link"] [&arg [&boolean] "IsHit"] [&arg (&optional) [&string] "StylePrefix"] [&arg (&optional) [&string] "LiveBody"]) #f] [&interface-sub-decl [segment] [&string] "GetSiteLicenseKey" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "GetURLEncoder" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "kmaProcessReplacement" (&arg-list [&arg [&variant] "NameValueLines"] [&arg [&variant] "Source"]) #f] [&interface-sub-decl [segment] [&string] "kmaGetSpacer" (&arg-list [&arg [&long] "Width"] [&arg [&long] "Height"]) #f] [&interface-sub-decl [segment] [&string] "GetFormInputSelectNameValue" (&arg-list [&arg [&string] "SelectName"] [&arg [&array [&type "NameValuePairType"]] "NameValueArray"]) #f] [&interface-sub-decl [segment] [&string] "GetApplicationStatusMessage" (&arg-list [&arg [&long] "ApplicationStatus"]) #f] [&interface-sub-decl [segment] [&void] "SetNameValueArrays" (&arg-list [&arg [&string] "InputName"] [&arg [&string] "InputValue"] [&arg [&array [&string] -1] "SQLName"] [&arg [&array [&string] -1] "SQLValue"] [&arg [&long] "Index"]) #f] [&interface-sub-decl [segment] [&void] "cpTick" (&arg-list [&arg [&string] "Text"]) #f] [&interface-sub-decl [segment] [&string] "EncodeSQL" (&arg-list [&arg [&variant] "ExpressionVariant"] [&arg (&optional) [&variant] "fieldType"]) #f] [&interface-sub-decl [segment] [&string] "GetGMTFromDate" (&arg-list [&arg [&date] "DateValue"]) #f] [&interface-sub-decl [segment] [&date] "GetDateFromGMT" (&arg-list [&arg [&string] "GMTDate"]) #f] [&interface-sub-decl [segment] [&string] "GetURIPage" (&arg-list [&arg [&string] "URI"]) #f] [&interface-sub-decl [segment] [&string] "GetURIHost" (&arg-list [&arg [&string] "URI"]) #f] [&interface-sub-decl [segment] [&string] "ReplaceMany" (&arg-list [&arg [&string] "Source"] [&arg [&array [&string] -1] "ArrayOfSource"] [&arg [&array [&string] -1] "ArrayOfReplacement"]) #f] [&interface-sub-decl [segment] [&string] "DecodeHTML" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "encodeFilename" (&arg-list [&arg [&string] "Source"]) #f] [&interface-sub-decl [segment] [&string] "EncodeXML" (&arg-list [&arg [&variant] "ValueVariant"] [&arg [&long] "fieldType"]) #f] [&interface-sub-decl [segment] [&boolean] "IsTrue" (&arg-list [&arg [&variant] "ValueVariant"]) #f] [&interface-sub-decl [segment] [&void] "SetRMBString" (&arg-list [&arg [&array [&byte]] "ByteArray"] [&arg [&string] "StringValue"] [&arg (&optional) [&long] "Position"]) #f] [&interface-sub-decl [segment] [&void] "SetRMBLong" (&arg-list [&arg [&array [&byte] -1] "ByteArray"] [&arg [&long] "LongValue"] [&arg (&optional) [&long] "Position"]) #f] [&interface-sub-decl [segment] [&void] "SetStringByteArray" (&arg-list [&arg [&array [&byte]] "ByteArray"] [&arg [&long] "Position"] [&arg [&string] "StringValue"]) #f] [&interface-sub-decl [segment] [&void] "SetLongByteArray" (&arg-list [&arg [&array [&byte] -1] "ByteArray"] [&arg [&long] "Position"] [&arg [&long] "LongValue"]) #f] [&interface-sub-decl [segment] [&string] "GetStringFromByteArray" (&arg-list [&arg [&array [&byte]] "ByteArray"] [&arg [&long] "Position"]) #f] [&interface-sub-decl [segment] [&long] "GetNumberFromByteArray" (&arg-list [&arg [&array [&byte]] "ByteArray"] [&arg [&long] "Position"]) #f] [&interface-sub-decl [segment] [&long] "GetLongFromByteArray" (&arg-list [&arg [&array [&byte]] "ByteArray"] [&arg [&long] "Position"]) #f] [&interface-sub-decl [segment] [&string] "CCString" (&arg-list [&arg [&integer] "Index"]) #f] [&interface-sub-decl [segment] [&string] "PayString" (&arg-list [&arg [&integer] "Index"]) #f] [&interface-sub-decl [segment] [&void] "StopDebugTimer" (&arg-list [&arg [&boolean] "Enabled"] [&arg [&string] "Label"]) #f] [&interface-sub-decl [segment] [&void] "StartDebugTimer" (&arg-list [&arg [&boolean] "Enabled"] [&arg [&string] "Label"]) #f] [&interface-sub-decl [segment] [&long] "RegQueryValueEx" (&arg-list [&arg (&byval) [&long] "hKey"] [&arg (&byval) [&string] "lpszValueName"] [&arg (&byval) [&long] "lpdwRes"] [&arg [&long] "lpdwType"] [&arg [&long] "lpDataBuff"] [&arg [&long] "nSize"]) #f] [&interface-sub-decl [segment] [&long] "RegQueryValueExA" (&arg-list [&arg (&byval) [&long] "hKey"] [&arg (&byval) [&string] "lpszValueName"] [&arg (&byval) [&long] "lpdwRes"] [&arg [&long] "lpdwType"] [&arg (&byval) [&string] "lpDataBuff"] [&arg [&long] "nSize"]) #f] [&interface-sub-decl [segment] [&long] "RegOpenKeyExA" (&arg-list [&arg (&byval) [&long] "hKey"] [&arg (&byval) [&string] "lpszSubKey"] [&arg [&long] "dwOptions"] [&arg (&byval) [&long] "samDesired"] [&arg [&long] "lpHKey"]) #f] [&interface-sub-decl [segment] [&long] "RegCloseKey" (&arg-list [&arg (&byval) [&long] "hKey"]) #f] [&vb-interface-prop (>>all) [segment] "CPTickCountBase" [&double]]]] [list* "aoCExport.CExportClass" [segment [&interface-sub-decl [segment] [&string] "GetConfig" (&arg-list) #f] [&interface-sub-decl [segment] [&string] "encodeFilename" (&arg-list [&arg [&string] "Filename"]) #f] [&interface-sub-decl [segment] [&string] "ReplaceMany" (&arg-list [&arg [&string] "Source"] [&arg [&array [&string] -1] "ArrayOfSource"] [&arg [&array [&string] -1] "ArrayOfReplacement"]) #f] [&interface-sub-decl [segment] [&string] "Execute" (&arg-list [&arg [&variant] "CsvObject"] [&arg [&variant] "MainObject"] [&arg [&string] "OptionString"] [&arg [&string] "FilterInput"]) #f]]]]